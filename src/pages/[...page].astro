
---
import type { GetStaticPaths } from "astro";
import Pagination from "../components/control/Pagination.astro";
import { PAGE_SIZE } from "../constants/constants";
import MainGridLayout from "../layouts/MainGridLayout.astro";
import { getSortedPosts } from "../utils/content-utils";

export const getStaticPaths = (async ({ paginate }) => {
	const allBlogPosts = await getSortedPosts();
	return paginate(allBlogPosts, { pageSize: PAGE_SIZE });
}) satisfies GetStaticPaths;

const { page } = Astro.props;
---

<MainGridLayout>
    <div class="video-grid-container">
        <div class="video-grid">
            {page.data.map((entry, index) => (
                <div class="video-item" style={`animation-delay: ${index * 100}ms`}>
                    <a href={`/posts/${entry.slug}/`} class="video-link">
                        <div class="video-thumbnail">
                            <img 
                                src={entry.data.image || '/favicon/favicon-light-192.png'} 
                                alt={entry.data.title}
                                loading="lazy"
                            />
                            {entry.data.duration && (
                                <div class="duration-badge">{entry.data.duration}</div>
                            )}
                            <div class="play-overlay">
                                <svg class="play-icon" viewBox="0 0 24 24" fill="currentColor">
                                    <path d="M8 5v14l11-7z"/>
                                </svg>
                            </div>
                        </div>
                        <div class="video-info">
                            <h3 class="video-title">{entry.data.title}</h3>
                            <div class="video-meta">
                                <span class="video-views">Views</span>
                                {entry.data.tags && entry.data.tags.length > 0 && (
                                    <span class="video-tags">
                                        {entry.data.tags.slice(0, 3).join(', ')}
                                    </span>
                                )}
                            </div>
                        </div>
                    </a>
                </div>
            ))}
        </div>
    </div>
    <Pagination class="pagination-container" page={page}></Pagination>
</MainGridLayout>

<style>
    .video-grid-container {
        min-height: 100vh;
        padding: 1rem;
    }
    
    .video-grid {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
        gap: 1.5rem;
        max-width: 1200px;
        margin: 0 auto;
    }
    
    .video-item {
        background: var(--card-bg);
        border-radius: 8px;
        overflow: hidden;
        transition: transform 0.2s ease, box-shadow 0.2s ease;
        animation: fadeInUp 0.6s ease-out forwards;
        opacity: 0;
    }
    
    .video-item:hover {
        transform: translateY(-4px);
        box-shadow: 0 8px 25px rgba(0, 0, 0, 0.2);
    }
    
    .video-link {
        display: block;
        text-decoration: none;
        color: inherit;
    }
    
    .video-thumbnail {
        position: relative;
        width: 100%;
        aspect-ratio: 16/9;
        overflow: hidden;
        background: #000;
    }
    
    .video-thumbnail img {
        width: 100%;
        height: 100%;
        object-fit: cover;
        transition: transform 0.3s ease;
    }
    
    .video-item:hover .video-thumbnail img {
        transform: scale(1.05);
    }
    
    .duration-badge {
        position: absolute;
        bottom: 8px;
        right: 8px;
        background: rgba(0, 0, 0, 0.8);
        color: white;
        padding: 2px 6px;
        border-radius: 3px;
        font-size: 12px;
        font-weight: bold;
    }
    
    .play-overlay {
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        width: 60px;
        height: 60px;
        background: rgba(255, 255, 255, 0.9);
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        opacity: 0;
        transition: opacity 0.3s ease;
    }
    
    .video-item:hover .play-overlay {
        opacity: 1;
    }
    
    .play-icon {
        width: 24px;
        height: 24px;
        color: #000;
        margin-left: 3px;
    }
    
    .video-info {
        padding: 1rem;
    }
    
    .video-title {
        font-size: 1rem;
        font-weight: 600;
        line-height: 1.3;
        margin: 0 0 0.5rem 0;
        color: var(--primary-text);
        display: -webkit-box;
        -webkit-line-clamp: 2;
        -webkit-box-orient: vertical;
        overflow: hidden;
    }
    
    .video-meta {
        display: flex;
        flex-direction: column;
        gap: 0.25rem;
        font-size: 0.875rem;
        color: var(--secondary-text);
    }
    
    .video-views {
        font-weight: 500;
    }
    
    .video-tags {
        color: var(--primary);
        font-size: 0.8rem;
    }
    
    .pagination-container {
        margin: 3rem auto 2rem;
        display: flex;
        justify-content: center;
    }
    
    @keyframes fadeInUp {
        from {
            opacity: 0;
            transform: translateY(30px);
        }
        to {
            opacity: 1;
            transform: translateY(0);
        }
    }
    
    @media (max-width: 768px) {
        .video-grid {
            grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
            gap: 1rem;
            padding: 0 0.5rem;
        }
        
        .video-info {
            padding: 0.75rem;
        }
        
        .video-title {
            font-size: 0.9rem;
        }
        
        .play-overlay {
            width: 50px;
            height: 50px;
        }
        
        .play-icon {
            width: 20px;
            height: 20px;
        }
    }
    
    @media (max-width: 480px) {
        .video-grid {
            grid-template-columns: 1fr;
            gap: 1rem;
        }
    }
</style>
