
---
import type { SimilarPost } from "@utils/similar-posts";
import { getPostUrlBySlug } from "@utils/url-utils";
import { Icon } from "astro-icon/components";

interface Props {
  similarPosts: SimilarPost[];
  class?: string;
}

const { similarPosts, class: className = "" } = Astro.props;

if (similarPosts.length === 0) return null;
---

<div class={`similar-posts-container ${className}`}>
  <div class="flex items-center gap-3 mb-6">
    <div class="h-8 w-8 rounded-lg bg-[var(--primary)]/10 flex items-center justify-center">
      <Icon name="material-symbols:auto-stories-outline" class="text-lg text-[var(--primary)]" />
    </div>
    <h3 class="text-xl font-bold text-black/90 dark:text-white/90">
      You might also like
    </h3>
  </div>
  
  <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4">
    {similarPosts.map((post) => (
      <a 
        href={getPostUrlBySlug(post.slug)}
        class="group block card-base rounded-xl overflow-hidden hover:shadow-lg transition-all duration-300 active:scale-[0.98] bg-white dark:bg-gray-800"
      >
        <div class="flex flex-col h-full">
          <!-- Video Thumbnail -->
          <div class="relative aspect-video overflow-hidden bg-black">
            {post.data.image ? (
              <img 
                src={post.data.image}
                alt={post.data.title}
                class="w-full h-full object-cover transition-transform duration-300 group-hover:scale-105"
                loading="lazy"
              />
            ) : (
              <div class="w-full h-full bg-gradient-to-br from-purple-600 to-blue-600 flex items-center justify-center">
                <svg class="w-12 h-12 text-white opacity-60" fill="currentColor" viewBox="0 0 24 24">
                  <path d="M8 5v14l11-7z"/>
                </svg>
              </div>
            )}
            
            <!-- Duration Badge -->
            {post.data.duration && (
              <div class="absolute bottom-2 right-2 bg-black/90 text-white px-2 py-1 rounded text-xs font-bold">
                {post.data.duration}
              </div>
            )}
            
            <!-- Play Button Overlay -->
            <div class="absolute inset-0 bg-black/20 opacity-0 group-hover:opacity-100 transition-opacity duration-300 flex items-center justify-center">
              <div class="w-12 h-12 bg-white/95 rounded-full flex items-center justify-center">
                <svg class="w-4 h-4 text-gray-800 ml-0.5" fill="currentColor" viewBox="0 0 24 24">
                  <path d="M8 5v14l11-7z"/>
                </svg>
              </div>
            </div>
          </div>

          <div class="p-4 flex flex-col flex-grow">
            <!-- Category Badge -->
            {post.data.category && (
              <div class="mb-2">
                <span class="inline-block px-2 py-1 text-xs font-semibold bg-purple-100 dark:bg-purple-900/30 text-purple-700 dark:text-purple-300 rounded-md">
                  {post.data.category}
                </span>
              </div>
            )}
            
            <!-- Title -->
            <h4 class="font-semibold text-gray-900 dark:text-white mb-2 line-clamp-2 group-hover:text-purple-600 dark:group-hover:text-purple-400 transition-colors text-sm leading-tight">
              {post.data.title}
            </h4>
            
            <!-- Description -->
            {post.data.description && (
              <p class="text-sm text-gray-600 dark:text-gray-400 mb-3 line-clamp-2 flex-grow">
                {post.data.description}
              </p>
            )}
            
            <!-- Metadata -->
            <div class="flex items-center justify-between text-xs text-gray-500 dark:text-gray-400 mt-auto">
              <span>{post.data.published.toLocaleDateString()}</span>
              <div class="flex items-center gap-1">
                <span class="text-purple-600 dark:text-purple-400 font-medium">
                  {post.similarity} match{post.similarity !== 1 ? 'es' : ''}
                </span>
                <Icon 
                  name="material-symbols:chevron-right-rounded" 
                  class="text-lg transition-transform group-hover:translate-x-1 text-gray-400"
                />
              </div>
            </div>
            
            <!-- Tags -->
            {post.data.tags && post.data.tags.length > 0 && (
              <div class="flex flex-wrap gap-1 mt-2">
                {post.data.tags.slice(0, 3).map(tag => (
                  <span class="px-1.5 py-0.5 text-xs bg-gray-100 dark:bg-gray-700 rounded text-gray-700 dark:text-gray-300">
                    #{tag}
                  </span>
                ))}
              </div>
            )}
          </div>
        </div>
      </a>
    ))}
  </div>
</div>

<style>
  .similar-posts-container {
    animation: slideUp 0.6s ease-out;
  }
  
  @keyframes slideUp {
    from {
      opacity: 0;
      transform: translateY(20px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }
  
  .line-clamp-2 {
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
</style>
